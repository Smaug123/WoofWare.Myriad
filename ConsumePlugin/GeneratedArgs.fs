//------------------------------------------------------------------------------
//        This code was generated by myriad.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------






namespace ArgParserHelpers

/// Helper types for arg parsing
module private ArgParseHelpers_ConsumePlugin =
    open System
    open System.IO
    open WoofWare.Myriad.Plugins
    open ConsumePlugin

    /// A partially-parsed BasicNoPositionals.
    type private BasicNoPositionals_InProgress =
        {
            Foo : System.Int32 option
            Bar : System.String option
            Baz : System.Boolean option
            Rest : string list
        }

        member this.Assemble (positionals : string list) : BasicNoPositionals = "TODO: now construct the object"

    /// A partially-parsed Basic.
    type private Basic_InProgress =
        {
            Foo : System.Int32 option
            Bar : System.String option
            Baz : System.Boolean option
        }

        member this.Assemble (positionals : string list) : Basic = "TODO: now construct the object"

    /// A partially-parsed BasicWithIntPositionals.
    type private BasicWithIntPositionals_InProgress =
        {
            Foo : System.Int32 option
            Bar : System.String option
            Baz : System.Boolean option
        }

        member this.Assemble (positionals : string list) : BasicWithIntPositionals = "TODO: now construct the object"

    /// A partially-parsed LoadsOfTypes.
    type private LoadsOfTypes_InProgress =
        {
            Foo : System.Int32 option
            Bar : System.String option
            Baz : System.Boolean option
            SomeFile : FileInfo option
            SomeDirectory : DirectoryInfo option
            SomeList : string list
            OptionalThingWithNoDefault : int option
            OptionalThing : bool option
            AnotherOptionalThing : int option
            YetAnotherOptionalThing : string option
        }

        member this.Assemble (positionals : string list) : LoadsOfTypes = "TODO: now construct the object"

    /// A partially-parsed LoadsOfTypesNoPositionals.
    type private LoadsOfTypesNoPositionals_InProgress =
        {
            Foo : System.Int32 option
            Bar : System.String option
            Baz : System.Boolean option
            SomeFile : FileInfo option
            SomeDirectory : DirectoryInfo option
            SomeList : string list
            OptionalThingWithNoDefault : int option
            OptionalThing : bool option
            AnotherOptionalThing : int option
            YetAnotherOptionalThing : string option
        }

        member this.Assemble (positionals : string list) : LoadsOfTypesNoPositionals = "TODO: now construct the object"

    /// A partially-parsed DatesAndTimes.
    type private DatesAndTimes_InProgress =
        {
            Plain : TimeSpan option
            Invariant : TimeSpan option
            Exact : TimeSpan option
            InvariantExact : TimeSpan option
        }

        member this.Assemble (positionals : string list) : DatesAndTimes = "TODO: now construct the object"

    /// A partially-parsed ChildRecord.
    type private ChildRecord_InProgress =
        {
            Thing1 : System.Int32 option
            Thing2 : System.String option
        }

        member this.Assemble (positionals : string list) : ChildRecord = "TODO: now construct the object"

    /// A partially-parsed ParentRecord.
    type private ParentRecord_InProgress =
        {
            Child : ChildRecord_InProgress
            AndAnother : System.Boolean option
        }

        member this.Assemble (positionals : string list) : ParentRecord = "TODO: now construct the object"

    /// A partially-parsed ChildRecordWithPositional.
    type private ChildRecordWithPositional_InProgress =
        {
            Thing1 : System.Int32 option
        }

        member this.Assemble (positionals : string list) : ChildRecordWithPositional = "TODO: now construct the object"

    /// A partially-parsed ParentRecordChildPos.
    type private ParentRecordChildPos_InProgress =
        {
            Child : ChildRecordWithPositional_InProgress
            AndAnother : System.Boolean option
        }

        member this.Assemble (positionals : string list) : ParentRecordChildPos = "TODO: now construct the object"

    /// A partially-parsed ParentRecordSelfPos.
    type private ParentRecordSelfPos_InProgress =
        {
            Child : ChildRecord_InProgress
        }

        member this.Assemble (positionals : string list) : ParentRecordSelfPos = "TODO: now construct the object"

    /// A partially-parsed ChoicePositionals.
    type private ChoicePositionals_InProgress =
        {
            _Dummy : unit
        }

        member this.Assemble (positionals : string list) : ChoicePositionals = "TODO: now construct the object"

    /// A partially-parsed ContainsBoolEnvVar.
    type private ContainsBoolEnvVar_InProgress =
        {
            BoolVar : bool option
        }

        member this.Assemble (positionals : string list) : ContainsBoolEnvVar = "TODO: now construct the object"

    /// A partially-parsed WithFlagDu.
    type private WithFlagDu_InProgress =
        {
            DryRun : DryRunMode option
        }

        member this.Assemble (positionals : string list) : WithFlagDu = "TODO: now construct the object"

    /// A partially-parsed ContainsFlagEnvVar.
    type private ContainsFlagEnvVar_InProgress =
        {
            DryRun : DryRunMode option
        }

        member this.Assemble (positionals : string list) : ContainsFlagEnvVar = "TODO: now construct the object"

    /// A partially-parsed ContainsFlagDefaultValue.
    type private ContainsFlagDefaultValue_InProgress =
        {
            DryRun : DryRunMode option
        }

        member this.Assemble (positionals : string list) : ContainsFlagDefaultValue = "TODO: now construct the object"

    /// A partially-parsed ManyLongForms.
    type private ManyLongForms_InProgress =
        {
            DoTheThing : System.String option
            SomeFlag : System.Boolean option
        }

        member this.Assemble (positionals : string list) : ManyLongForms = "TODO: now construct the object"

    /// A partially-parsed FlagsIntoPositionalArgs.
    type private FlagsIntoPositionalArgs_InProgress =
        {
            A : System.String option
        }

        member this.Assemble (positionals : string list) : FlagsIntoPositionalArgs = "TODO: now construct the object"

    /// A partially-parsed FlagsIntoPositionalArgsChoice.
    type private FlagsIntoPositionalArgsChoice_InProgress =
        {
            A : System.String option
        }

        member this.Assemble (positionals : string list) : FlagsIntoPositionalArgsChoice =
            "TODO: now construct the object"

    /// A partially-parsed FlagsIntoPositionalArgsInt.
    type private FlagsIntoPositionalArgsInt_InProgress =
        {
            A : System.String option
        }

        member this.Assemble (positionals : string list) : FlagsIntoPositionalArgsInt = "TODO: now construct the object"

    /// A partially-parsed FlagsIntoPositionalArgsIntChoice.
    type private FlagsIntoPositionalArgsIntChoice_InProgress =
        {
            A : System.String option
        }

        member this.Assemble (positionals : string list) : FlagsIntoPositionalArgsIntChoice =
            "TODO: now construct the object"

    /// A partially-parsed FlagsIntoPositionalArgs'.
    type private FlagsIntoPositionalArgs'_InProgress =
        {
            A : System.String option
        }

        member this.Assemble (positionals : string list) : FlagsIntoPositionalArgs' = "TODO: now construct the object"
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type FlagsIntoPositionalArgs'
[<AutoOpen>]
module FlagsIntoPositionalArgs'ArgParse =
    type private ParseState_FlagsIntoPositionalArgs' =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type FlagsIntoPositionalArgs' with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : FlagsIntoPositionalArgs'
            =
            failwith "todo"

        static member parse (args : string list) : FlagsIntoPositionalArgs' =
            FlagsIntoPositionalArgs'.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type FlagsIntoPositionalArgsIntChoice
[<AutoOpen>]
module FlagsIntoPositionalArgsIntChoiceArgParse =
    type private ParseState_FlagsIntoPositionalArgsIntChoice =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type FlagsIntoPositionalArgsIntChoice with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : FlagsIntoPositionalArgsIntChoice
            =
            failwith "todo"

        static member parse (args : string list) : FlagsIntoPositionalArgsIntChoice =
            FlagsIntoPositionalArgsIntChoice.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type FlagsIntoPositionalArgsInt
[<AutoOpen>]
module FlagsIntoPositionalArgsIntArgParse =
    type private ParseState_FlagsIntoPositionalArgsInt =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type FlagsIntoPositionalArgsInt with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : FlagsIntoPositionalArgsInt
            =
            failwith "todo"

        static member parse (args : string list) : FlagsIntoPositionalArgsInt =
            FlagsIntoPositionalArgsInt.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type FlagsIntoPositionalArgsChoice
[<AutoOpen>]
module FlagsIntoPositionalArgsChoiceArgParse =
    type private ParseState_FlagsIntoPositionalArgsChoice =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type FlagsIntoPositionalArgsChoice with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : FlagsIntoPositionalArgsChoice
            =
            failwith "todo"

        static member parse (args : string list) : FlagsIntoPositionalArgsChoice =
            FlagsIntoPositionalArgsChoice.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type FlagsIntoPositionalArgs
[<AutoOpen>]
module FlagsIntoPositionalArgsArgParse =
    type private ParseState_FlagsIntoPositionalArgs =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type FlagsIntoPositionalArgs with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : FlagsIntoPositionalArgs
            =
            failwith "todo"

        static member parse (args : string list) : FlagsIntoPositionalArgs =
            FlagsIntoPositionalArgs.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ManyLongForms
[<AutoOpen>]
module ManyLongFormsArgParse =
    type private ParseState_ManyLongForms =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ManyLongForms with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ManyLongForms =
            failwith "todo"

        static member parse (args : string list) : ManyLongForms =
            ManyLongForms.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ContainsFlagDefaultValue
[<AutoOpen>]
module ContainsFlagDefaultValueArgParse =
    type private ParseState_ContainsFlagDefaultValue =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ContainsFlagDefaultValue with

        static member parse'
            (getEnvironmentVariable : string -> string)
            (args : string list)
            : ContainsFlagDefaultValue
            =
            failwith "todo"

        static member parse (args : string list) : ContainsFlagDefaultValue =
            ContainsFlagDefaultValue.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ContainsFlagEnvVar
[<AutoOpen>]
module ContainsFlagEnvVarArgParse =
    type private ParseState_ContainsFlagEnvVar =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ContainsFlagEnvVar with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ContainsFlagEnvVar =
            failwith "todo"

        static member parse (args : string list) : ContainsFlagEnvVar =
            ContainsFlagEnvVar.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type WithFlagDu
[<AutoOpen>]
module WithFlagDuArgParse =
    type private ParseState_WithFlagDu =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type WithFlagDu with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : WithFlagDu =
            failwith "todo"

        static member parse (args : string list) : WithFlagDu =
            WithFlagDu.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ContainsBoolEnvVar
[<AutoOpen>]
module ContainsBoolEnvVarArgParse =
    type private ParseState_ContainsBoolEnvVar =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ContainsBoolEnvVar with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ContainsBoolEnvVar =
            failwith "todo"

        static member parse (args : string list) : ContainsBoolEnvVar =
            ContainsBoolEnvVar.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ChoicePositionals
[<AutoOpen>]
module ChoicePositionalsArgParse =
    type private ParseState_ChoicePositionals =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ChoicePositionals with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ChoicePositionals =
            failwith "todo"

        static member parse (args : string list) : ChoicePositionals =
            ChoicePositionals.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ParentRecordSelfPos
[<AutoOpen>]
module ParentRecordSelfPosArgParse =
    type private ParseState_ParentRecordSelfPos =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ParentRecordSelfPos with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ParentRecordSelfPos =
            failwith "todo"

        static member parse (args : string list) : ParentRecordSelfPos =
            ParentRecordSelfPos.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ParentRecordChildPos
[<AutoOpen>]
module ParentRecordChildPosArgParse =
    type private ParseState_ParentRecordChildPos =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ParentRecordChildPos with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ParentRecordChildPos =
            failwith "todo"

        static member parse (args : string list) : ParentRecordChildPos =
            ParentRecordChildPos.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type ParentRecord
[<AutoOpen>]
module ParentRecordArgParse =
    type private ParseState_ParentRecord =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type ParentRecord with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : ParentRecord =
            failwith "todo"

        static member parse (args : string list) : ParentRecord =
            ParentRecord.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type DatesAndTimes
[<AutoOpen>]
module DatesAndTimesArgParse =
    type private ParseState_DatesAndTimes =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    /// Extension methods for argument parsing
    type DatesAndTimes with

        static member parse' (getEnvironmentVariable : string -> string) (args : string list) : DatesAndTimes =
            failwith "todo"

        static member parse (args : string list) : DatesAndTimes =
            DatesAndTimes.parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type LoadsOfTypesNoPositionals
[<RequireQualifiedAccess ; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]
module LoadsOfTypesNoPositionals =
    type private ParseState_LoadsOfTypesNoPositionals =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    let parse' (getEnvironmentVariable : string -> string) (args : string list) : LoadsOfTypesNoPositionals =
        failwith "todo"

    let parse (args : string list) : LoadsOfTypesNoPositionals =
        parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type LoadsOfTypes
[<RequireQualifiedAccess ; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]
module LoadsOfTypes =
    type private ParseState_LoadsOfTypes =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    let parse' (getEnvironmentVariable : string -> string) (args : string list) : LoadsOfTypes = failwith "todo"

    let parse (args : string list) : LoadsOfTypes =
        parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type BasicWithIntPositionals
[<RequireQualifiedAccess ; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]
module BasicWithIntPositionals =
    type private ParseState_BasicWithIntPositionals =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    let parse' (getEnvironmentVariable : string -> string) (args : string list) : BasicWithIntPositionals =
        failwith "todo"

    let parse (args : string list) : BasicWithIntPositionals =
        parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type Basic
[<RequireQualifiedAccess ; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]
module Basic =
    type private ParseState_Basic =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    let parse' (getEnvironmentVariable : string -> string) (args : string list) : Basic = failwith "todo"

    let parse (args : string list) : Basic =
        parse' System.Environment.GetEnvironmentVariable args
namespace ConsumePlugin

open System
open System.IO
open WoofWare.Myriad.Plugins

/// Methods to parse arguments for the type BasicNoPositionals
[<RequireQualifiedAccess ; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]
module BasicNoPositionals =
    type private ParseState_BasicNoPositionals =
        /// Ready to consume a key or positional arg
        | AwaitingKey
        /// Waiting to receive a value for the key we've already consumed
        | AwaitingValue of key : string

    let parse' (getEnvironmentVariable : string -> string) (args : string list) : BasicNoPositionals = failwith "todo"

    let parse (args : string list) : BasicNoPositionals =
        parse' System.Environment.GetEnvironmentVariable args
